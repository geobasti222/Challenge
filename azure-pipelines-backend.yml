# create-storage-account-fixed.yml
trigger: none
pr: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  resourceGroupName: 'TerraformStateResourceGroup'
  containerName: 'tfstate'

steps:
- task: AzureCLI@2
  displayName: 'Create Storage Account via Service Principal'
  inputs:
    azureSubscription: 'MychallengeServiceConnection'  # Tu service connection existente
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      set -e
      
      echo "=== Verificando autenticaciÃ³n ==="
      az account show
      
      echo "=== Verificando permisos ==="
      az role assignment list --assignee "8d2aaea2-169a-488a-8a5c-81aa28612a52" --output table
      
      echo "=== Creando Storage Account ==="
      # Generar nombre Ãºnico
      TIMESTAMP=$(date +%s)
      STORAGE_NAME="tfstate$TIMESTAMP"
      echo "Nuevo Storage Account: $STORAGE_NAME"
      
      # Crear Resource Group si no existe
      az group create --name $(resourceGroupName) --location eastus --tags CreatedBy=AzureDevOps || echo "Resource Group ya existe"
      
      # Crear Storage Account
      az storage account create \
        --resource-group $(resourceGroupName) \
        --name $STORAGE_NAME \
        --sku Standard_LRS \
        --encryption-services blob \
        --location eastus \
        --allow-blob-public-access false \
        --https-only true
      
      echo "Esperando a que el Storage Account estÃ© listo..."
      sleep 30
      
      # Crear container
      az storage container create \
        --name $(containerName) \
        --account-name $STORAGE_NAME \
        --auth-mode login
      
      echo ""
      echo "=== âœ… STORAGE ACCOUNT CREADO EXITOSAMENTE ==="
      echo "Resource Group: $(resourceGroupName)"
      echo "Storage Account: $STORAGE_NAME" 
      echo "Container: $(containerName)"
      echo ""
      echo "=== ðŸ”§ ACTUALIZA TU PIPELINE PRINCIPAL ==="
      echo "Variable: tfBackendStorage = $STORAGE_NAME"

- task: Bash@3
  displayName: 'Mostrar valores finales'
  inputs:
    targetType: 'inline'
    script: |
      echo "Una vez que el pipeline termine, copia el nombre del Storage Account"
      echo "y actualiza la variable 'tfBackendStorage' en tu pipeline principal"